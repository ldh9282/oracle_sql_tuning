-- =============================================================================
-- index access path 
-- =============================================================================
-- 1. index full scan 
-- 옵티마이저가 언제 index full scan을 하냐면
-- 인덱스 컬럼으로 order by 할 때
-- 인덱스 컬럼으로 group by 할 때
-- sort-merge join
-- =============================================================================
-- 인덱스를 사용해서 order by 할 때 index full scan 일어남
select * from departments order by department_id;
-- last_name + first_name 으로 복합키인 name 인덱스가 있음
-- 인덱스의 컬럼 포지션(c.column_position)이 last_name이 1이고 first_name이 2임
-- 그래서 order by last_name 하면 sort하는데 cost가 소모되지 않지만
-- order by first_name을 먼저하면 sort하는데 cost가 소모됨
-- 이 경우 index full scan만 일어남
select last_name, first_name from employees order by last_name;
-- 이 경우 sort하고 index full scan이 일어남
select last_name, first_name from employees order by first_name;
-- 이 경우 sort하고 index full scan이 일어남
select last_name, first_name from employees order by first_name, last_name;
-- 이 경우 index full scan만 일어남
-- 고로 복합키 인덱스를 사용할 경우 컬럼 포지션이 1인 녀석이 누구인지 파악하는 게 중요
select last_name, first_name from employees order by last_name, first_name;
-- salary 에는 인덱스가 없으므로 group by 할 때 full table scan 이 일어남
-- 코스트 (group by: 11346438, full table scan: 68777)
select salary, count(*) from employees
where salary is not null
group by salary;
-- 그러나 salary 에 인덱스를 생성해주면
create index emp_salary_ix on employees (salary);
-- index full scan 이 일어남
-- 코스트 (group by: 28521, full table scan: 28521)
select salary, count(*) from employees
where salary is not null
group by salary;
-- 결과 봤으니까 인덱스 삭제
drop index emp_salary_ix;
-- sort-merge join 할 때 index full scan 일어남
-- 조인할 때 department_id 컬럼에 해당하는 인덱스로부터 full scan
select * from employees e, departments d
where e.department_id = d.department_id;

-- =============================================================================
-- hr 소유의 employees 테이블의 인덱스 조회
select c.column_name, c.column_position, i.*
from all_indexes i, all_ind_columns c
where i.index_name = c.index_name
and i.owner = 'HR' and i.table_name = 'EMPLOYEES';
-- hr 소유의 departments 테이블의 인덱스 조회
select c.column_name, i.*
from all_indexes i, all_ind_columns c
where i.index_name = c.index_name
and i.owner = 'HR' and i.table_name = 'DEPARTMENTS';